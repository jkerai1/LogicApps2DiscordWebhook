{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "ServiceHealthAlerting",
            "type": "string"
        }
    },
    "variables": {
        "OutlookConnectionName": "[concat('Outlook-', parameters('PlaybookName'))]",
        "KeyvaultConnectionName": "[concat('Keyvault-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                        "defaultValue": {},
                        "type": "Object"
                    }
                },
                "triggers": {
                    "When_a_new_email_arrives_(V2)": {
                        "splitOn": "@triggerBody()?['value']",
                        "metadata": {
                            "Id::AQMkADAwATNiZmYAZS04YTMxLTliYWYtMDACLTAwCgAuAAADi0VD8WTgfEOgK5nWLTVIqAEACkd1zb42PkuA5Flk7i2tsgAAAm2pAAAA": "ServiceHealth"
                        },
                        "type": "ApiConnectionNotification",
                        "inputs": {
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['outlook']['connectionId']"
                                }
                            },
                            "fetch": {
                                "pathTemplate": {
                                    "template": "/v2/Mail/OnNewEmail"
                                },
                                "method": "get",
                                "queries": {
                                    "from": "o365mc@microsoft.com",
                                    "importance": "Any",
                                    "fetchOnlyWithAttachment": false,
                                    "includeAttachments": false,
                                    "subjectFilter": "Service",
                                    "folderPath": "Id::AQMkADAwATNiZmYAZS04YTMxLTliYWYtMDACLTAwCgAuAAADi0VD8WTgfEOgK5nWLTVIqAEACkd1zb42PkuA5Flk7i2tsgAAAm2pAAAA"
                                }
                            },
                            "subscribe": {
                                "body": {
                                    "NotificationUrl": "@listCallbackUrl()"
                                },
                                "pathTemplate": {
                                    "template": "/MailSubscriptionPoke/$subscriptions"
                                },
                                "method": "post",
                                "queries": {
                                    "importance": "Any",
                                    "fetchOnlyWithAttachment": false,
                                    "folderPath": "Id::AQMkADAwATNiZmYAZS04YTMxLTliYWYtMDACLTAwCgAuAAADi0VD8WTgfEOgK5nWLTVIqAEACkd1zb42PkuA5Flk7i2tsgAAAm2pAAAA"
                                }
                            }
                        }
                    }
                },
                "actions": {
                    "HTTP_Webhook": {
                        "runAfter": {
                            "Get_secret": [
                                "Succeeded"
                            ]
                        },
                        "limit": {
                            "timeout": "PT1S"
                        },
                        "type": "HttpWebhook",
                        "inputs": {
                            "subscribe": {
                                "method": "POST",
                                "uri": "@body('Get_secret')?['value']",
                                "body": {
                                    "content": "@{triggerBody()?['Subject']} -  [Link to ServiceHealth](https://admin.microsoft.com/Adminportal/Home#/servicehealth)",
                                    "embeds": [
                                        {
                                            "title": "Description",
                                            "description": "@{substring(triggerBody()?['BodyPreview'],add(indexOf(triggerBody()?['BodyPreview'], '\r\n\r\n'),3))}",
                                            "color": 5814783
                                        }
                                    ]
                                }
                            }
                        },
                        "runtimeConfiguration": {
                            "secureData": {
                                "properties": [
                                    "inputs"
                                ]
                            }
                        }
                    },
                    "Terminate": {
                        "runAfter": {
                            "HTTP_Webhook": [
                                "Succeeded",
                                "Failed",
                                "TimedOut"
                            ]
                        },
                        "type": "Terminate",
                        "inputs": {
                            "runStatus": "Succeeded"
                        },
                        "description": "Convert Time out to success - discord webhook will not post back so little point in holding out"
                    },
                    "Get_secret": {
                    "runAfter": {},
                    "type": "ApiConnection",
                    "inputs": {
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['keyvault']['connectionId']"
                            }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent('ServiceHealthAlerting-Dev')}/value"
                    },
                    "runtimeConfiguration": {
                        "secureData": {
                            "properties": [
                                "inputs",
                                "outputs"
                            ]
                        }
                    }
                }
            },
        "outputs": {}
    },
    "parameters": {
        "$connections": {
            "value": {
                "outlook": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('OutlookConnectionName'))]",
                    "connectionName": "[variables('OutlookConnectionName')]",
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Outlook')]"
                },
                "keyvault": {
                    "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                    "connectionName": "[variables('KeyvaultConnectionName')]",
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]",
                    "connectionProperties": {
                        "authentication": {
                            "type": "ManagedServiceIdentity"
                        }
                    }
                }
            }
        }
    },
"accessControl": {},
"runtimeConfiguration": {
    "lifetime": {
        "unit": "Day",
        "count": 24
    }
}
},
"name": "[parameters('PlaybookName')]",
"type": "Microsoft.Logic/workflows",
"location": "[resourceGroup().location]",
"tags": {},
"identity": {
"type": "SystemAssigned"
},
"apiVersion": "2017-07-01",
"dependsOn": [
"[resourceId('Microsoft.Web/connections', variables('OutlookConnectionName'))]",
"[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
]
},
{
"type": "Microsoft.Web/connections",
"apiVersion": "2016-06-01",
"name": "[variables('OutlookConnectionName')]",
"location": "[resourceGroup().location]",
"kind": "V1",
"properties": {
"displayName": "[variables('OutlookConnectionName')]",
"customParameterValues": {},
"api": {
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Outlook')]"
}
}
},
{
"type": "Microsoft.Web/connections",
"apiVersion": "2016-06-01",
"name": "[variables('KeyvaultConnectionName')]",
"location": "[resourceGroup().location]",
"kind": "V1",
"properties": {
"displayName": "[variables('KeyvaultConnectionName')]",
"customParameterValues": {},
"parameterValueType": "Alternative",
"api": {
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
}
}
}
]
}
